pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo giới tính
pr_get("/income_by_gender", function(){
income_by_gender
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Gender)
pr_get("/chartjs_income_by_gender", function(){
list(
labels = income_by_gender$Gender,
datasets = list(
list(
label = "Average Income",
data = income_by_gender$avg_income
)
)
)
}) %>%
# Chạy API trên port 8000
pr_run(host = "0.0.0.0", port = 8000)
data_clean <- data_raw %>%
filter(!is.na(Earnings_USD)) %>%
mutate(
Income = as.numeric(Earnings_USD),
Gender = NA, # vì file này không có Gender, nếu cần thì xóa hoặc gán NA
JobCategory = str_to_title(Job_Category)
)
pr() %>%
# Cấu hình CORS
pr_filter("cors", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
if (req$REQUEST_METHOD == "OPTIONS") {
res$status <- 200
return(list())
}
forward()
}) %>%
# Tổng quan dữ liệu thu nhập
pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo giới tính
pr_get("/income_by_gender", function(){
income_by_gender
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Gender)
pr_get("/chartjs_income_by_gender", function(){
list(
labels = income_by_gender$Gender,
datasets = list(
list(
label = "Average Income",
data = income_by_gender$avg_income
)
)
)
}) %>%
# Chạy API trên port 8000
run(host = "0.0.0.0", port = 8000)
install.packages(c("plumber", "tidyverse", "jsonlite"))
library(plumber)
library(tidyverse)
library(jsonlite)
library(magrittr)
data_raw <- read_csv("data/freelancer_earnings_bd.csv")
library(plumber)
library(tidyverse)
library(jsonlite)
library(magrittr)
data_raw <- read_csv("data/freelancer_earnings_bd.csv")
setwd("D:/R-report/backend")
data_raw <- read_csv("data/freelancer_earnings_bd.csv")
data_clean <- data_raw %>%
filter(!is.na(Earnings_USD)) %>%
mutate(
Income = as.numeric(Earnings_USD),
Gender = NA, # vì file này không có Gender, nếu cần thì xóa hoặc gán NA
JobCategory = str_to_title(Job_Category)
)
data_norm <- data_clean %>%
mutate(Income_norm = (Income - min(Income)) / (max(Income) - min(Income)))
income_summary <- data_clean %>%
summarise(
mean_income = mean(Income, na.rm = TRUE),
median_income = median(Income, na.rm = TRUE),
max_income = max(Income, na.rm = TRUE),
min_income = min(Income, na.rm = TRUE)
)
income_by_job <- data_clean %>%
group_by(JobCategory) %>%
summarise(
avg_income = mean(Income, na.rm = TRUE)
) %>%
arrange(desc(avg_income))
income_by_gender <- data_clean %>%
group_by(Gender) %>%
summarise(
avg_income = mean(Income, na.rm = TRUE)
) %>%
arrange(desc(avg_income))
pr() %>%
# Cấu hình CORS
pr_filter("cors", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
if (req$REQUEST_METHOD == "OPTIONS") {
res$status <- 200
return(list())
}
forward()
}) %>%
# Tổng quan dữ liệu thu nhập
pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo giới tính
pr_get("/income_by_gender", function(){
income_by_gender
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Gender)
pr_get("/chartjs_income_by_gender", function(){
list(
labels = income_by_gender$Gender,
datasets = list(
list(
label = "Average Income",
data = income_by_gender$avg_income
)
)
)
}) %>%
# Chạy API trên port 8000
run(host = "0.0.0.0", port = 8000)
pr() %>%
# Cấu hình CORS
pr_filter("cors", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
if (req$REQUEST_METHOD == "OPTIONS") {
res$status <- 200
return(list())
}
forward()
}) %>%
# Tổng quan dữ liệu thu nhập
pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo giới tính
pr_get("/income_by_gender", function(){
income_by_gender
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Gender)
pr_get("/chartjs_income_by_gender", function(){
list(
labels = income_by_gender$Gender,
datasets = list(
list(
label = "Average Income",
data = income_by_gender$avg_income
)
)
)
}) %>%
# Chạy API trên port 8000
pr_run(host = "0.0.0.0", port = 8000)
library(plumber)
library(tidyverse)
library(jsonlite)
library(magrittr)
setwd("D:/R-report/backend")
data_raw <- read_csv("data/freelancer_earnings_bd.csv")
data_clean <- data_raw %>%
filter(!is.na(Earnings_USD)) %>%
mutate(
Income = as.numeric(Earnings_USD),
JobCategory = str_to_title(Job_Category),
ExperienceLevel = str_to_title(Experience_Level),
Platform = str_to_title(Platform),
ClientRegion = str_to_title(Client_Region),
PaymentMethod = str_to_title(Payment_Method),
ProjectType = str_to_title(Project_Type)
)
data_norm <- data_clean %>%
mutate(Income_norm = (Income - min(Income)) / (max(Income) - min(Income)))
library(plumber)
library(tidyverse)
library(jsonlite)
library(magrittr)
setwd("D:/R-report/backend")
data_raw <- read_csv("data/freelancer_earnings_bd.csv")
data_clean <- data_raw %>%
filter(!is.na(Earnings_USD)) %>%
mutate(
Income = as.numeric(Earnings_USD),
JobCategory = str_to_title(Job_Category),
ExperienceLevel = str_to_title(Experience_Level),
Platform = str_to_title(Platform),
ClientRegion = str_to_title(Client_Region),
PaymentMethod = str_to_title(Payment_Method),
ProjectType = str_to_title(Project_Type),
JobSuccessRate = as.numeric(Job_Success_Rate),
ClientRating = as.numeric(Client_Rating),
JobDuration = as.numeric(Job_Duration_Days),
RehireRate = as.numeric(Rehire_Rate),
MarketingSpend = as.numeric(Marketing_Spend),
HourlyRate = as.numeric(Hourly_Rate),
JobsCompleted = as.numeric(Job_Completed)
)
data_norm <- data_clean %>%
mutate(
Income_norm = (Income - min(Income)) / (max(Income) - min(Income)),
SuccessRate_norm = (JobSuccessRate - min(JobSuccessRate)) / (max(JobSuccessRate) - min(JobSuccessRate)),
Rating_norm = (ClientRating - min(ClientRating)) / (max(ClientRating) - min(ClientRating))
)
income_summary <- data_clean %>%
summarise(
mean_income = mean(Income, na.rm = TRUE),
median_income = median(Income, na.rm = TRUE),
max_income = max(Income, na.rm = TRUE),
min_income = min(Income, na.rm = TRUE),
mean_hourly_rate = mean(HourlyRate, na.rm = TRUE),
mean_success_rate = mean(JobSuccessRate, na.rm = TRUE),
mean_client_rating = mean(ClientRating, na.rm = TRUE)
)
income_by_job <- data_clean %>%
group_by(JobCategory) %>%
summarise(
avg_income = mean(Income, na.rm = TRUE),
avg_hourly_rate = mean(HourlyRate, na.rm = TRUE),
avg_success_rate = mean(JobSuccessRate, na.rm = TRUE),
avg_client_rating = mean(ClientRating, na.rm = TRUE)
) %>%
arrange(desc(avg_income))
income_by_platform <- data_clean %>%
group_by(Platform) %>%
summarise(
avg_income = mean(Income, na.rm = TRUE),
avg_hourly_rate = mean(HourlyRate, na.rm = TRUE),
avg_success_rate = mean(JobSuccessRate, na.rm = TRUE),
avg_client_rating = mean(ClientRating, na.rm = TRUE)
) %>%
arrange(desc(avg_income))
pr() %>%
# Cấu hình CORS
pr_filter("cors", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
if (req$REQUEST_METHOD == "OPTIONS") {
res$status <- 200
return(list())
}
forward()
}) %>%
# Tổng quan thu nhập
pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo nền tảng
pr_get("/income_by_platform", function(){
income_by_platform
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu đã chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
),
list(
label = "Average Hourly Rate",
data = income_by_job$avg_hourly_rate
),
list(
label = "Average Success Rate",
data = income_by_job$avg_success_rate
),
list(
label = "Average Client Rating",
data = income_by_job$avg_client_rating
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Platform)
pr_get("/chartjs_income_by_platform", function(){
list(
labels = income_by_platform$Platform,
datasets = list(
list(
label = "Average Income",
data = income_by_platform$avg_income
),
list(
label = "Average Hourly Rate",
data = income_by_platform$avg_hourly_rate
),
list(
label = "Average Success Rate",
data = income_by_platform$avg_success_rate
),
list(
label = "Average Client Rating",
data = income_by_platform$avg_client_rating
)
)
)
}) %>%
# Chạy API trên port 8000
run(host = "0.0.0.0", port = 8000)
pr() %>%
# Cấu hình CORS
pr_filter("cors", function(req, res) {
res$setHeader("Access-Control-Allow-Origin", "*")
res$setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS")
res$setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization")
if (req$REQUEST_METHOD == "OPTIONS") {
res$status <- 200
return(list())
}
forward()
}) %>%
# Tổng quan thu nhập
pr_get("/summary", function(){
income_summary
}) %>%
# Thu nhập trung bình theo nghề
pr_get("/income_by_job", function(){
income_by_job
}) %>%
# Thu nhập trung bình theo nền tảng
pr_get("/income_by_platform", function(){
income_by_platform
}) %>%
# Dữ liệu đã làm sạch
pr_get("/clean_data", function(){
data_clean
}) %>%
# Dữ liệu đã chuẩn hóa
pr_get("/normalized_data", function(){
data_norm
}) %>%
# Dữ liệu format cho Chart.js (Income by Job)
pr_get("/chartjs_income_by_job", function(){
list(
labels = income_by_job$JobCategory,
datasets = list(
list(
label = "Average Income",
data = income_by_job$avg_income
),
list(
label = "Average Hourly Rate",
data = income_by_job$avg_hourly_rate
),
list(
label = "Average Success Rate",
data = income_by_job$avg_success_rate
),
list(
label = "Average Client Rating",
data = income_by_job$avg_client_rating
)
)
)
}) %>%
# Dữ liệu format cho Chart.js (Income by Platform)
pr_get("/chartjs_income_by_platform", function(){
list(
labels = income_by_platform$Platform,
datasets = list(
list(
label = "Average Income",
data = income_by_platform$avg_income
),
list(
label = "Average Hourly Rate",
data = income_by_platform$avg_hourly_rate
),
list(
label = "Average Success Rate",
data = income_by_platform$avg_success_rate
),
list(
label = "Average Client Rating",
data = income_by_platform$avg_client_rating
)
)
)
}) %>%
# Chạy API trên port 8000
pr_run(host = "0.0.0.0", port = 8000)
source("api.R")
source("api.R")
source("api.R")
source("api.R")
